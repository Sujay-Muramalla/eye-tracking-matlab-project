#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QSharedPointer>
#include <QString>
#include <QLabel>

#include <tobii/sdk/cpp/EyeTrackerBrowser.hpp>

#include "mainloopthread.h"
#include "eyetrackerscontroller.h"
#include "qteyetracker.h"
#include "trackstatuswidget.h"
#include "gazedataserializer.h"
#include "listviewdelegate.h"

namespace tetio = tobii::sdk::cpp;

namespace Ui {
//This class will be generated by Qt
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT
    
public:
    MainWindow(MainLoopThread& mainLoopThread, QWidget *parent = 0);
    ~MainWindow();

private slots:
    void currentItemChanged(const QModelIndex &current);
    void connectSelectedEyeTracker();
    void startTracking();
    void runCalibration();
    void eyetrackerConnectionError(uint32_t errorCode);
    void changeFrameRate();
    void framerateChanged(float framerate);

private:
    QString selectedProductId();
    void disconnectEyeTracker();
    void init();
    void saveGazeDataToFile();
    void updateTrackingUI(bool start);
    void showError(const QString &text);
    Ui::MainWindow *m_ui;
    QLabel *m_connectionStatusLabel;
    EyeTrackersController m_eyetrackersController;
    QtEyeTracker *m_eyetracker;
    TrackStatusWidget *m_trackStatusWidget;
    GazeDataSerializer m_gazeDataSerializer;
    bool m_isTracking;
    //ListviewDelegate for custom drawing
    ListviewDelegate *m_listdelegate;
};

#endif // MAINWINDOW_H
